-target 1.6
-dontskipnonpubliclibraryclasses
-dontskipnonpubliclibraryclassmembers
-verbose
-dontoptimize
# -optimizationpasses 3
-dontobfuscate
-dontpreverify
# -dontshrink
-printusage
# -dump

-basedirectory /scala/trunk/build/pack
-injars       lib/scala-library.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-library.jar
-injars       lib/scala-compiler.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-compiler.jar
-injars       lib/scala-repl.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-repl.jar
-injars       lib/scala-asm.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-asm.jar
-injars       lib/jline.jar
-outjars      /scala/trunk/build/shrunk/lib/jline.jar
-injars       lib/forkjoin.jar
-outjars      /scala/trunk/build/shrunk/lib/forkjoin.jar
-libraryjars  /inst/jar/jansi-1.8.jar
-libraryjars  <java.home>/lib/rt.jar
-libraryjars  /usr/share/java/ant-1.8.2/lib/ant.jar
-printmapping proguard.map

-keepparameternames
-renamesourcefileattribute SourceFile
-keepattributes *Annotation*,InnerClasses,Signature,SourceFile,LineNumberTable,StackMapTable,EnclosingMethod,Scala,ScalaSig
-keep class **.package*
-keep class * implements org.xml.sax.EntityResolver
-keep class scala.NotNull
-keep class scala.*
-keep class scala.math.*
-keep class scala.runtime.*
-keep class scala.reflect.**
-keep class **.*RunTime*
-keep,allowoptimization,allowshrinking class *
-keepclassmembers class * {
    ** MODULE$;
    *** bytes();
    public static *** *;
}
-keep public class * {
    public protected *;
}

# -keep class scala.tools.nsc.ClassLoaders
# -keep class scala.collection.immutable.Nil*
# -keep class scala.collection.generic.HasNewBuilder
# 
# -keep class scala.Array*
# -keep class scala.** 
# -dontwarn scala.**
# -keep public class * {
#     public protected *;
# }
# 
# -keepclasseswithmembers public class * {
#     *** main(java.lang.String[]);
# }
# -keepclassmembers class * implements java.io.Serializable {
#     static final long serialVersionUID;
#     private static final java.io.ObjectStreamField[] serialPersistentFields;
#     private void writeObject(java.io.ObjectOutputStream);
#     private void readObject(java.io.ObjectInputStream);
#     java.lang.Object writeReplace();
#     java.lang.Object readResolve();
# }
# 
# -keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
#     long eventCount;
#     int  workerCounts;
#     int  runControl;
# }
# 
# -keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
#     int base;
#     int sp;
#     int runState;
# }
# 
# -keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
#     int status;
# }
