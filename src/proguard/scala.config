-basedirectory /scala/trunk/build/pack
-injars       lib/scala-library.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-library.jar
-injars       lib/scala-compiler.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-compiler.jar
-injars       lib/scala-repl.jar
-outjars      /scala/trunk/build/shrunk/lib/scala-repl.jar
-libraryjars  <java.home>/lib/rt.jar
-libraryjars  /usr/share/java/ant-1.8.2/lib/ant.jar
-libraryjars  lib/scala-asm.jar
-libraryjars  lib/forkjoin.jar:lib/jline.jar
-printmapping /scala/trunk/build/shrunk/proguard.map

# -dontskipnonpubliclibraryclassmembers
# -keepparameternames
# -renamesourcefileattribute SourceFile
# -keepattributes Exceptions,InnerClasses,Signature,Deprecated,ScalaSig
# -keepattributes SourceFile,LineNumberTable,*Annotation*,EnclosingMethod

-dontwarn scala.**
-dontobfuscate

-keepclasseswithmembers public class * {
    public static void main(java.lang.String[]);
}

-keep class * implements org.xml.sax.EntityResolver
-keep class scala.*

-keepclassmembers class * {
    ** MODULE$;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
    long eventCount;
    int  workerCounts;
    int  runControl;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
    int base;
    int sp;
    int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
    int status;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}
